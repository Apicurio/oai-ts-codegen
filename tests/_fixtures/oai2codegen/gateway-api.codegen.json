{
  "name": "Apiman Gateway API",
  "version": "1.3.0",
  "interfaces": [
    {
      "name": "ApisResource",
      "package": "io.openapi.simple",
      "path": "/apis",
      "methods": [
        {
          "name": "publishAnAPI",
          "path": null,
          "method": "put",
          "produces": [],
          "consumes": [],
          "arguments": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "type": "io.openapi.simple.beans.API"
            }
          ],
          "description": "Publish an API and make it immediately available on the gateway.",
          "return": null
        }
      ]
    },
    {
      "name": "ClientsResource",
      "package": "io.openapi.simple",
      "path": "/clients",
      "methods": [
        {
          "name": "registerAClient",
          "path": null,
          "method": "put",
          "produces": [],
          "consumes": [],
          "arguments": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "type": "io.openapi.simple.beans.Client"
            }
          ],
          "description": "Register a Client and make it immediately available on the gateway.",
          "return": null
        }
      ]
    },
    {
      "name": "SystemResource",
      "package": "io.openapi.simple",
      "path": "/system",
      "methods": [
        {
          "name": "getGatewayStatus",
          "path": "/status",
          "method": "get",
          "produces": [],
          "consumes": [],
          "arguments": [],
          "description": "Get current gateway status. Useful for determining whether a given gateway is responding correctly (routing, finished booting, error, etc) and verifying that provided auth credentials are correct, and/or the auth server is reachable (if applicable).",
          "return": {
            "type": "io.openapi.simple.beans.SystemStatus"
          }
        }
      ]
    }
  ],
  "beans": [
    {
      "name": "SystemStatus",
      "package": "io.openapi.simple.beans",
      "$schema": {
        "properties": {
          "id": {
            "description": "The system's ID",
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "description": "The system's human-readable name",
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "version": {
            "description": "The version of the gateway (i.e. apiman release)",
            "minLength": 1,
            "type": "string"
          },
          "up": {
            "description": "Whether the system is up and available for requests.",
            "type": "boolean"
          }
        }
      }
    },
    {
      "name": "Policy",
      "package": "io.openapi.simple.beans",
      "$schema": {
        "title": "Policy",
        "required": [
          "policyJsonConfig",
          "policyImpl"
        ],
        "type": "object",
        "properties": {
          "policyJsonConfig": {
            "title": "Policy JSON config",
            "description": "The policy's escaped/serialised configuration.",
            "minLength": 1,
            "type": "string"
          },
          "policyImpl": {
            "title": "Policy implementation.",
            "description": "Policy implementation coordinates, either: \n\n* class:[Fully qualified class reference]\n* plugin:[GroupId]:[ArtifactId]:[Version]:war/[Fully qualified class name]'\n\nFor example:\n\n* `class:io.apiman.gateway.engine.policies.BasicAuthenticationPolicy`\n* `plugin:io.apiman.plugins:apiman-plugins-simple-header-policy:1.3.1.Final:war/io.apiman.plugins.simpleheaderpolicy.SimpleHeaderPolicy`\n\nA plugin's class reference can usually be found in the documentation, \nor via the plugin's `apiman/policyDefs/[POLICY-NAME]-policyDef.json`\nmetadata in the `policyImpl` field. \n\n**It may be easier to use the apiman-cli tool to generate this \nconfiguration for you.**\n\nNote that the fully qualified class name must be a valid Java FQN, however\nthat is not explicitly checked here due to its complexity.\n",
            "minLength": 1,
            "pattern": "^(class:.+)|(plugin:(.+?):(.+?):(.+?):war\\/.+)$",
            "type": "string"
          }
        }
      }
    },
    {
      "name": "API",
      "package": "io.openapi.simple.beans",
      "$schema": {
        "title": "API",
        "properties": {
          "publicApi": {
            "title": "Public API",
            "default": false,
            "type": "boolean"
          },
          "organizationId": {
            "title": "Organization identifier",
            "minLength": 1,
            "type": "string"
          },
          "apiId": {
            "title": "API identifier",
            "minLength": 1,
            "type": "string"
          },
          "version": {
            "title": "Version identifier",
            "minLength": 1,
            "type": "string"
          },
          "endpoint": {
            "title": "Endpoint URI",
            "minLength": 1,
            "type": "string"
          },
          "endpointType": {
            "title": "Endpoint type",
            "minLength": 1,
            "enum": [
              "rest",
              "soap"
            ],
            "type": "string"
          },
          "endpointContentType": {
            "title": "Endpoint Content Type",
            "description": "Gateway's content type when responding with errors/failures.",
            "enum": [
              "json",
              "xml"
            ]
          },
          "endpointProperties": {
            "title": "Endpoint properties",
            "type": "object"
          },
          "parsePayload": {
            "title": "Parse payload",
            "description": "Parse whole payload upfront (reduces performance).",
            "default": false,
            "type": "boolean"
          },
          "apiPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Policy"
            }
          }
        }
      }
    },
    {
      "name": "Client",
      "package": "io.openapi.simple.beans",
      "$schema": {
        "title": "Client",
        "type": "object",
        "properties": {
          "organizationId": {
            "title": "Organization identifier",
            "minLength": 1,
            "type": "string"
          },
          "clientId": {
            "title": "Client identifier",
            "minLength": 1,
            "type": "string"
          },
          "version": {
            "title": "Version identifier",
            "minLength": 1,
            "type": "string"
          },
          "apiKey": {
            "title": "API Key",
            "minLength": 1,
            "type": "string"
          },
          "contracts": {
            "title": "Contracts",
            "required": [
              "apiOrgId",
              "apiId",
              "apiVersion",
              "plan"
            ],
            "type": "array",
            "items": {
              "title": "Contract",
              "type": "object",
              "properties": {
                "apiOrgId": {
                  "title": "API Organization ID",
                  "description": "Organization of API chosen. Must map to a valid API Organization ID.",
                  "minLength": 1,
                  "type": "string"
                },
                "apiId": {
                  "title": "API ID",
                  "description": "API chosen. Must map to a valid API ID.",
                  "minLength": 1,
                  "type": "string"
                },
                "apiVersion": {
                  "title": "API Version",
                  "description": "Version of API chosen. Must map to a valid API Version.",
                  "minLength": 1,
                  "type": "string"
                },
                "plan": {
                  "title": "Plan Name",
                  "description": "Name of plan.",
                  "minLength": 1,
                  "type": "string"
                },
                "policies": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Policy"
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "description": "The Apiman Gateway API"
}
